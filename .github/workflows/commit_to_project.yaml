# This workflow runs whenever a pull request in the repository is marked as "ready for review".
name: Add Commit to Project
on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    track:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # 모든 커밋을 가져오기 위해

            - name: Get project data and set up environment variables
              env:
                  GH_TOKEN: ${{ secrets.ACC_TKN }}
                  USER: srlee056
                  PROJECT_NUMBER: 6
              run: |
                  gh api graphql -f query='
                    query($user: String!, $number: Int!) {
                      user(login: $user){
                        projectV2(number: $number) {
                          id
                          fields(first:20) {
                            nodes {
                              ... on ProjectV2Field {
                                id
                                name
                              }
                              ... on ProjectV2SingleSelectField {
                                id
                                name
                                options {
                                  id
                                  name
                                }
                              }
                            }
                          }
                        }
                      }
                    }' -f user=$USER -F number=$PROJECT_NUMBER > project_data.json

                    PROJECT_ID=$(jq '.data.user.projectV2.id' project_data.json)
                    echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
                    echo "PROJECT_ID: $PROJECT_ID"
                    
                    TITLE_FIELD_ID=$(jq -r '.data.user.projectV2.fields.nodes[] | select(.name=="Title") | .id' project_data.json)
                    echo "TITLE_FIELD_ID=$TITLE_FIELD_ID" >> $GITHUB_ENV
                    echo "TITLE_FIELD_ID: $TITLE_FIELD_ID"
                    
                    DATE_FIELD_ID=$(jq -r '.data.user.projectV2.fields.nodes[] | select(.name=="Date Solved") | .id' project_data.json)
                    echo "DATE_FIELD_ID=$DATE_FIELD_ID" >> $GITHUB_ENV
                    echo "DATE_FIELD_ID: $DATE_FIELD_ID"
                    
                    STATUS_FIELD_ID=$(jq -r '.data.user.projectV2.fields.nodes[] | select(.name=="Status") | .id' project_data.json)
                    echo "STATUS_FIELD_ID=$STATUS_FIELD_ID" >> $GITHUB_ENV
                    echo "STATUS_FIELD_ID: $STATUS_FIELD_ID"
                    
                    DONE_OPTION_ID=$(jq -r '.data.user.projectV2.fields.nodes[] | select(.name=="Status") | .options[] | select(.name=="Done") | .id' project_data.json)
                    echo "DONE_OPTION_ID=$DONE_OPTION_ID" >> $GITHUB_ENV
                    echo "DONE_OPTION_ID: $DONE_OPTION_ID"

            - name: Process each commit
              env:
                  GH_TOKEN: ${{ secrets.ACC_TKN }}
              run: |
                  git log ${{ github.event.before }}..${{ github.event.after }} --format='%H' | while read commit_hash; do
                    COMMIT_MESSAGE=$(git log -1 --format=%B $commit_hash)
                    COMMIT_DATE=$(git log -1 --format=%cd --date=format:'%Y-%m-%d' $commit_hash)
                    AUTHOR_NAME=$(git log -1 --format=%an $commit_hash)
                    echo $commit_hash
                    echo $COMMIT_MESSAGE
                    echo $COMMIT_DATE
                    echo $AUTHOR_NAME
                    echo $TITLE_FIELD_ID
                    echo $STATUS_FIELD_ID
                    echo $DATE_FIELD_ID
                    if [[ $COMMIT_MESSAGE == [* ]]; then
                      # 환경 변수에 커밋 정보 설정
                      echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
                      echo "COMMIT_DATE=$COMMIT_DATE" >> $GITHUB_ENV
                      echo "AUTHOR_NAME=$AUTHOR_NAME" >> $GITHUB_ENV
                      echo "If passed"
                      # GitHub CLI를 사용하여 프로젝트에 커밋 정보를 추가하는 부분
                      # 각 커밋에 대해 이 부분을 실행합니다.
                      gh api graphql -f query='
                      mutation($project:ID!, $item:ID!, $titleField:ID!, $titleValue:String!, $statusField:ID!, $statusValue:String!, $dateField:ID!, $dateValue:Date!) {
                        updateTitle: updateProjectV2ItemFieldValue(input: {
                            projectId: $project
                            itemId: $item
                            fieldId: $titleField
                            value: {
                                text: $titleValue
                            }
                            }) {
                            projectV2Item {
                                id
                            }
                        }
                        updateStatus: updateProjectV2ItemFieldValue(input: {
                            projectId: $project
                            itemId: $item
                            fieldId: $statusField
                            value: {
                                singleSelectOptionId: $statusValue
                            }
                            }) {
                            projectV2Item {
                                id
                            }
                        }
                        updateDate: updateProjectV2ItemFieldValue(input: {
                            projectId: $project
                            itemId: $item
                            fieldId: $dateField
                            value: {
                                date: $dateValue
                            }
                            }) {
                            projectV2Item {
                                id
                            }
                        }
                      }' -f project=$PROJECT_ID -f item=$item_id -f titleField=$TITLE_FIELD_ID -f titleValue="${COMMIT_MESSAGE}" -f statusField=$STATUS_FIELD_ID -f statusValue=${DONE_OPTION_ID} -f dateField=$DATE_FIELD_ID -f dateValue="${COMMIT_DATE}" --silent
                      echo "update Done"
                    fi
                  done
